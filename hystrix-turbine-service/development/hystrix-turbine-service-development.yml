server:
  port: ${SERVER_PORT:0}
spring:
  rabbitmq:
    host: ${RABBITMQ_HOST_DEV:192.168.99.100} #RabbitMQ running as docker container
    port: ${RABBITMQ_PORT_DEV:5672}
    username: ${RABBITMQ_USERNAME_DEV:guest}
    password: ${RABBITMQ_PASSWORD_DEV:guest}
#Eureka Service registry Configuration
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
      # The default 'instance id' won't be unique if running on the same host and using 'server.port=0'
      # By Default, The default application name (that is, the service ID),
      # are ${spring.application.name}, and ${server.port}, respectively and is suffice for production
      instance-id: ${spring.application.name}:${random.int[1,99]}
      hostname: localhost
#For Distributed Tracing using Spring Cloud Sleuth and log level config
logging:
  level:
    root: ${LOG_LEVEL:INFO}
    org.springframework.cloud.sleuth: ${LOG_LEVEL:ERROR}
    org.springframework.boot.autoconfigure: ERROR 
    org.springframework.boot.devtools: WARN
    com.microservice: ${LOG_LEVEL:INFO}
  pattern:
    console: ${CONSOLE_LOG_PATTERN:%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}