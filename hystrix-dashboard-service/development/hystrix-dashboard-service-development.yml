server:
  port: ${SERVER_PORT:9092}
spring:
  rabbitmq:
    host: ${RABBITMQ_HOST_DEV:toll-platform-rabbitmq} #RabbitMQ running as docker container. toll-platform-rabbit-mq is DNS name(hostname) for container and for the same host file entry on windows is also needed.
    port: ${RABBITMQ_PORT_DEV:5672}
    username: ${RABBITMQ_USERNAME_DEV:guest}
    password: ${RABBITMQ_PASSWORD_DEV:guest}
    listener:
      direct:
        retry:
          enabled: true #Whether publishing retries are enabled when direct listener is used.
      simple:
        max-concurrency: 8 #Maximum number of listener invoker threads.
        retry:
          max-attempts: 3 #Maximum number of listener invoker threads.
          enabled: true #Whether publishing retries are enabled when direct listener is used.
    connection-timeout:
      zero: true #Set it to zero to wait forever.
#Actuator Endpoint config
management:
  endpoints:
    web:
      exposure:
        include: "*"
#For Distributed Tracing using Spring Cloud Sleuth and log level config
logging:
  level:
    root: ${LOG_LEVEL:INFO}
    org.springframework.cloud.sleuth: ${LOG_LEVEL:ERROR}
    org.springframework.boot.autoconfigure: ERROR 
    org.springframework.boot.devtools: WARN
    com.microservice: ${LOG_LEVEL:INFO}
  pattern:
    console: ${CONSOLE_LOG_PATTERN:%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}