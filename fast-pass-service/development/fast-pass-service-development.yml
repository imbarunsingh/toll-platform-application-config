security:
  oauth2:
    client:
      client-id: '{cipher}AgBFzjykjOU8mxkwTPs51Jzo4aoKqGreiZHf+7diymjjYe5i1nDkSrriHN39Tat27NDEnzomCLpBst4ZruhEpkaYZqaFp+IifL5BeCG3KkXyhOux3EqK3sBNRJC8BKWqoH+LalXCeohmnD999MQKibPN9AdKEEDkY/LqnMQw2yueMhn+OjTLPvJzXkdsU7pyPC8tDhVsSnPrMTrpg0mIC6L13A7Br4dc5ute/8LK742xi5eE8whyn8Wt4+MElWgCdf4U3oKK77hFr1lbQzkK9iP430BtvVhmHsP2yWwRoTHtU5jF8jqpqNBwJaIh6jURZkb6oBRrdC5BfO0etCMrVmLTBi9iLfBKy+DoKXsfMZpMqZDLuL2cGg4vBIeumNmjSDNhH03/tyLbgu059Ix7H8iXFAj4MyA5gR6YHEp+ndacLaK5UcX3Afasb6k4i8QSTCJ/psfQJoRxSOYKRGVFvkgHpVSurBE5DYpec/yhF4poeXH7blHDKkMCekx/SeqBkfobS1N80Lg1roEm+Hi9qUNIEYziXQK6FFVj8w7L+1k4rfU+nTC6YlmwP/HOKXentSAfcZzv9Lopv/gUFNY8gJjyfMO+2wlTbFEIQ+TpxxvRnH3TU7VNCeCrBALaB+vb7eqPsa5lnVrkSMHayGEZqqH15OV14FNCbOWkU8JQ1HtJy0sJv7yNmWXN/KdWXlRvvR+f9MYIrxtH8s1O/Ry6Rr52v7+8pp8oV28dldVU1X6i5Q=='
      client-secret: '{cipher}AgBBrLdfogB1xLU7HJTnBNiHko9NxrMJcQz0Sn9Wd/6VOnBG7b/4gDTZfH7QHKSOOnKgpRXEDk+PR8IKXoULfs6TU2iCAPQ+osusPfjerUi8Cf5fF/mGznyA5Ui1T2x3yW+bMTeE46qSPee+wreVjjHiahUaFbfgEAgH+9ma0eWmBIgMD2EU27uwvkG0itaA9FW0kHdg+s44ZiAWD9vbiQzfCNTvZY//Hw9iM3mbB14anqkCWKz3dP1F9c+AQ0lvgbnLYYBRtXy0QetPKVt1rrcmv7ZBtd4MlIs5iXnMKqJ6ovtdtXQI92SZDPLNkVKCJaXdmmwsT+npcR4qaAxJOgYBQj0LbLtlKmKcG2QkQ9U72wEc5i9G9SjSt7UOSOTjBT0Vg8mE+wp4suIqovF6DjWs42iHnUjRqeeD9xE7SOhOIG6/9SsIhsgW+toJLI3Xnml3CDbkPHKE8Fe5uR/gMX2LOtNfeYZC1dRk+nlL2kOIR8b5jjTiMmBmxRaKWeABpx/x66GB2pXY5b9slKtIm0uy/zsob/cCzaDpv/dY5jcPXZb81+HLQp3XMWbzfOR5nhAAOF/DFwyHmqyrHhRUTiHWWXfRgBNa+mzT3H4/Tq7mfMh10AeU33SP/rLZyJ5G5WC1f1yWHyam3iXnH9UKUvurs4CtMdao0qbqQw1pgBuub2flo3OYC9oxlnUHNvzBFVYrA6ncOhxCYAUhf1+5cpwzZdTYv5POQPLLpzmv+1lYdzqWvYHTwVoAUf9qTBPI48g='
      access-token-uri: https://dev-343895.oktapreview.com/oauth2/default/v1/token
      user-authorization-uri: https://dev-343895.oktapreview.com/oauth2/default/v1/authorize
      scope:
      - 'openid'
      - 'profile'
      - 'email'
    resource:
      user-info-uri: https://dev-343895.oktapreview.com/oauth2/default/v1/userinfo
server:
  port: ${SERVER_PORT:0}
spring:
  rabbitmq:
    host: ${RABBITMQ_HOST_DEV:172.17.0.2} #RabbitMQ running as docker container
    port: ${RABBITMQ_PORT_DEV:5672}
    username: ${RABBITMQ_USERNAME_DEV:guest}
    password: ${RABBITMQ_PASSWORD_DEV:guest}
#Eureka Service registry Configuration
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: ${EUREKA_DEFAULT_ZONE:http://eurekaServerUser:${EUREKA_SERVER_USER_PASSWORD:GbVx74Gp6cmEQnUcyNQKcCVu5NUfpx5K}@localhost:8761/eureka/}
  instance:
      # The default 'instance id' won't be unique if running on the same host and using 'server.port=0'
      # By Default, The default application name (that is, the service ID),
      # are ${spring.application.name}, and ${server.port}, respectively and is suffice for production
      instance-id: ${spring.application.name}:${random.int[1,99]}
      hostname: localhost
#Actuator Endpoint config
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info,hystrix.stream}
#For Distributed Tracing using Spring Cloud Sleuth and log level config
logging:
  level:
    root: ${LOG_LEVEL:INFO}
    org.springframework.cloud.sleuth: ${LOG_LEVEL:ERROR}
    org.springframework.boot.autoconfigure: ERROR 
    org.springframework.boot.devtools: WARN
    com.microservice: ${LOG_LEVEL:INFO}
  pattern:
    console: ${CONSOLE_LOG_PATTERN:%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}